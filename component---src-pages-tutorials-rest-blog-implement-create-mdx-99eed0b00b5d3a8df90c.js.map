{"version":3,"file":"component---src-pages-tutorials-rest-blog-implement-create-mdx-99eed0b00b5d3a8df90c.js","mappings":"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","sources":["webpack://armeria-site/./src/pages/tutorials/rest/blog/implement-create.mdx","webpack://armeria-site/./src/layouts/tutorials.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ikhun/src/upstream-armeria/site/src/layouts/tutorials.tsx\";\nexport const pageTitle = \"Implementing CREATE operation\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TutorialSteps = makeShortcode(\"TutorialSteps\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"implementing-create-operation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#implementing-create-operation\",\n        \"aria-label\": \"implementing create operation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Implementing CREATE operation`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#what-you-need\"\n          }}>{`What you need`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#1-map-http-method\"\n          }}>{`1. Map HTTP method`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#2-handle-parameters\"\n          }}>{`2. Handle parameters`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#write-a-request-converter\"\n            }}>{`Write a request converter`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#register-a-request-converter\"\n            }}>{`Register a request converter`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#3-implement-service-code\"\n          }}>{`3. Implement service code`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#4-return-response\"\n          }}>{`4. Return response`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#5-test-creating-a-blog-post\"\n          }}>{`5. Test creating a blog post`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#next-step\"\n          }}>{`Next step`}</a></p>\n      </li>\n    </ul>\n    <p>{`In this step, you'll write a service method for creating a blog post. By completing this step, you'll learn to map your service with the HTTP POST (`}<a parentName=\"p\" {...{\n        \"href\": \"type://@Post:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Post.html\"\n      }}>{`type://@Post`}</a>{`) method and make your own request converter (`}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html\"\n      }}>{`type://@RequestConverter`}</a>{`).`}</p>\n    <TutorialSteps current={4} mdxType=\"TutorialSteps\" />\n    <h2 {...{\n      \"id\": \"what-you-need\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#what-you-need\",\n        \"aria-label\": \"what you need permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What you need`}</h2>\n    <p>{`You must have the following files ready for creating a blog post. You can always `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/line/armeria-examples/blob/master/tutorials/rest-api-annotated-service/src/main/java/example/armeria/server/blog/\"\n      }}>{`download`}</a>{` the full version, instead of creating one yourself.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Main.java from `}<a parentName=\"li\" {...{\n          \"href\": \"/tutorials/rest/blog/create-server\"\n        }}>{`Step 1. Create a server`}</a></li>\n      <li parentName=\"ul\">{`BlogPost.java from `}<a parentName=\"li\" {...{\n          \"href\": \"/tutorials/rest/blog/prepare-data-object\"\n        }}>{`Step 2. Prepare a data object`}</a></li>\n      <li parentName=\"ul\">{`BlogService.java from `}<a parentName=\"li\" {...{\n          \"href\": \"/tutorials/rest/blog/add-services-to-server\"\n        }}>{`Step 3. Add services to a server`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"1-map-http-method\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#1-map-http-method\",\n        \"aria-label\": \"1 map http method permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`1. Map HTTP method`}</h2>\n    <p>{`Let's start `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-annotated-service#mapping-http-service-methods\"\n      }}>{`mapping the HTTP POST method`}</a>{` with our service method:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Declare a service method, `}<inlineCode parentName=\"li\">{`createBlogPost()`}</inlineCode>{`, in the class `}<inlineCode parentName=\"li\">{`BlogService`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Map this service method with the HTTP POST method by adding the `}<a parentName=\"li\" {...{\n          \"href\": \"type://@Post:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Post.html\"\n        }}>{`type://@Post`}</a>{` annotation.`}</li>\n      <li parentName=\"ol\">{`Bind the endpoint `}<inlineCode parentName=\"li\">{`/blogs`}</inlineCode>{` to the method.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogService.java highlight=6\",\n        \"filename\": \"BlogService.java\",\n        \"highlight\": \"6\"\n      }}>{`import com.linecorp.armeria.server.annotation.Post;\n\npublic final class BlogService {\n  ...\n\n  @Post(\"/blogs\")\n  public void createBlogPost(BlogPost blogPost) {}\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"2-handle-parameters\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#2-handle-parameters\",\n        \"aria-label\": \"2 handle parameters permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`2. Handle parameters`}</h2>\n    <p>{`Let's receive blog post information through a request body. Armeria's `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-annotated-service#converting-an-http-request-to-a-java-object\"\n      }}>{`request converter`}</a>{` converts request parameters in HTTP messages into Java objects for you. In the request converter, we define what keys of a JSON object to map with what properties of a Java object.`}</p>\n    <p>{`Let's first `}<a parentName=\"p\" {...{\n        \"href\": \"#write-a-request-converter\"\n      }}>{`write a request converter`}</a>{` and then `}<a parentName=\"p\" {...{\n        \"href\": \"#register-a-request-converter\"\n      }}>{`register the request converter`}</a>{` to the service method.`}</p>\n    <h3 {...{\n      \"id\": \"write-a-request-converter\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#write-a-request-converter\",\n        \"aria-label\": \"write a request converter permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Write a request converter`}</h3>\n    <p>{`Armeria's `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-annotated-service#converting-an-http-request-to-a-java-object\"\n      }}>{`request converter`}</a>{` converts a request body from a client into a Java object for you.`}</p>\n    <p>{`We can use Armeria's default `}<a parentName=\"p\" {...{\n        \"href\": \"type://JacksonRequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/JacksonRequestConverterFunction.html\"\n      }}>{`type://JacksonRequestConverterFunction`}</a>{` as is, but here let's give a go at customizing a request converter for our blog post requests. We want to convert blog post details into a Java object.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a BlogPostRequestConverter.java file and declare a class, implementing the `}<a parentName=\"p\" {...{\n            \"href\": \"type://RequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html\"\n          }}>{`type://RequestConverterFunction`}</a>{` interface. For the sake of simplicity, generate impromptu IDs for this tutorial.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogRequestConverter.java\",\n            \"filename\": \"BlogRequestConverter.java\"\n          }}>{`package example.armeria.server.blog;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.linecorp.armeria.server.annotation.RequestConverterFunction;\nimport java.util.concurrent.atomic.AtomicInteger;\n\nfinal class BlogPostRequestConverter implements RequestConverterFunction {\n  private static final ObjectMapper mapper = new ObjectMapper();\n  private AtomicInteger idGenerator = new AtomicInteger(); // Blog post ID\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add a method retrieving a value of a given key in a JSON object:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogRequestConverter.java highlight=6-12\",\n            \"filename\": \"BlogRequestConverter.java\",\n            \"highlight\": \"6-12\"\n          }}>{`import com.fasterxml.jackson.databind.JsonNode;\n\nfinal class BlogPostRequestConverter implements RequestConverterFunction {\n  ...\n\n  static String stringValue(JsonNode jsonNode, String field) {\n    JsonNode value = jsonNode.get(field);\n    if (value == null) {\n      throw new IllegalArgumentException(field + \" is missing!\");\n    }\n    return value.textValue();\n  }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Customize the default `}<inlineCode parentName=\"p\">{`convertRequest()`}</inlineCode>{` method as follows.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogRequestConverter.java highlight=10-22\",\n            \"filename\": \"BlogRequestConverter.java\",\n            \"highlight\": \"10-22\"\n          }}>{`import com.linecorp.armeria.server.ServiceRequestContext;\nimport com.linecorp.armeria.common.AggregatedHttpRequest;\nimport com.linecorp.armeria.common.annotation.Nullable;\nimport java.lang.reflect.ParameterizedType;\n\nfinal class BlogPostRequestConverter implements RequestConverterFunction {\n  ...\n\n  @Override\n  public Object convertRequest(ServiceRequestContext ctx,\n    AggregatedHttpRequest request, Class<?> expectedResultType,\n    @Nullable ParameterizedType expectedParameterizedResultType)\n      throws Exception {\n    if (expectedResultType == BlogPost.class) {\n      JsonNode jsonNode = mapper.readTree(request.contentUtf8());\n      int id = idGenerator.getAndIncrement();\n      String title = stringValue(jsonNode, \"title\");\n      String content = stringValue(jsonNode, \"content\");\n      return new BlogPost(id, title, content); // Create an instance of BlogPost object\n    }\n    return RequestConverterFunction.fallthrough();\n  }\n  ...\n}\n`}</code></pre>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"register-a-request-converter\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#register-a-request-converter\",\n        \"aria-label\": \"register a request converter permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Register a request converter`}</h3>\n    <p>{`In this step, assign the `}<a parentName=\"p\" {...{\n        \"href\": \"#write-a-request-converter\"\n      }}>{`request converter we customized`}</a>{` to our service method. Annotate the service method with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html\"\n      }}>{`type://@RequestConverter`}</a>{` and specify the `}<a parentName=\"p\" {...{\n        \"href\": \"type://RequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html\"\n      }}>{`type://RequestConverterFunction`}</a>{` class as `}<inlineCode parentName=\"p\">{`BlogPostRequestConverter.class`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogService.java highlight=7\",\n        \"filename\": \"BlogService.java\",\n        \"highlight\": \"7\"\n      }}>{`import com.linecorp.armeria.server.annotation.RequestConverter;\n\npublic final class BlogService {\n  ...\n\n  @Post(\"/blogs\")\n  @RequestConverter(BlogPostRequestConverter.class)\n  public void createBlogPost(BlogPost blogPost) {\n    // Implement blog service\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"3-implement-service-code\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#3-implement-service-code\",\n        \"aria-label\": \"3 implement service code permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`3. Implement service code`}</h2>\n    <p>{`When the request for creation is received, our request converter creates an instance of a blog post object for us. We want to save the blog post object in the map (`}<inlineCode parentName=\"p\">{`blogPosts`}</inlineCode>{`) created in the `}<inlineCode parentName=\"p\">{`BlogService`}</inlineCode>{` class.`}</p>\n    <p>{`Let's store the blog post information in the map by adding line 4, in the `}<inlineCode parentName=\"p\">{`createBlogPost()`}</inlineCode>{` method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogService.java highlight=4 showlineno=true\",\n        \"filename\": \"BlogService.java\",\n        \"highlight\": \"4\",\n        \"showlineno\": \"true\"\n      }}>{`@Post(\"/blogs\")\n@RequestConverter(BlogPostRequestConverter.class)\npublic void createBlogPost(BlogPost blogPost) {\n  blogPosts.put(blogPost.getId(), blogPost);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"4-return-response\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#4-return-response\",\n        \"aria-label\": \"4 return response permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`4. Return response`}</h2>\n    <p>{`Now, it's time to return a response to our client. As the response, return the information received, with additional information including the ID of the post, created time, plus the modified time which would be identical to the created\ntime.`}</p>\n    <p>{`Let's return a response for blog post creation:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Replace the return type of the `}<inlineCode parentName=\"p\">{`createBlogPost()`}</inlineCode>{` method from `}<inlineCode parentName=\"p\">{`void`}</inlineCode>{` to `}<a parentName=\"p\" {...{\n            \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n          }}>{`type://HttpResponse`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create and return an HTTP response using Armeria's `}<a parentName=\"p\" {...{\n            \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n          }}>{`type://HttpResponse`}</a>{` with the information of the post created.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogService.java highlight=5,7\",\n            \"filename\": \"BlogService.java\",\n            \"highlight\": \"5,7\"\n          }}>{`import com.linecorp.armeria.common.HttpResponse;\n\npublic final class BlogService {\n  ...\n  public HttpResponse createBlogPost(BlogPost blogPost) {\n    ...\n    return HttpResponse.ofJson(blogPost);\n  }\n}\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"5-test-creating-a-blog-post\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#5-test-creating-a-blog-post\",\n        \"aria-label\": \"5 test creating a blog post permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`5. Test creating a blog post`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the server like we did in `}<a parentName=\"p\" {...{\n            \"href\": \"/tutorials/rest/blog/create-server\"\n          }}>{`Step 1. Create a server`}</a>{` by running the\n`}<inlineCode parentName=\"p\">{`main()`}</inlineCode>{` method or using Gradle. When you see the message, \"Server has been started\", you can try testing the service method.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Call the service method for creating a blog post. Here, we'll use cURL.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ curl --request POST 'localhost:8080/blogs' \\\\\n-H 'Content-Type: application/json' \\\\\n-d '{\"title\":\"My first blog\", \"content\":\"Hello Armeria!\"}'\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Check the return value. The response includes created and modified times.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`{\"id\":0,\"title\":\"My first blog\",\"content\":\"Hello Armeria!\",\"createdAt\":...,\"modifiedAt\":...}\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`You can test this also with Armeria's `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-docservice\"\n      }}>{`Documentation service`}</a>{`. See `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorials/rest/blog/add-services-to-server#using-docservice-after-adding-service-methods\"\n      }}>{`Using DocService after adding service methods`}</a>{` for instructions.`}</p>\n    <h2 {...{\n      \"id\": \"next-step\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#next-step\",\n        \"aria-label\": \"next step permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Next step`}</h2>\n    <p>{`In this step, we've written a method to implement a CREATE operation and used Armeria's annotations; `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Post:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Post.html\"\n      }}>{`type://@Post`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html\"\n      }}>{`type://@RequestConverter`}</a>{`.`}</p>\n    <p>{`Next, at `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorials/rest/blog/implement-read\"\n      }}>{`Step 5. Implement READ`}</a>{`, we'll implement a READ operation to read a\nsingle post and also multiple posts.`}</p>\n    <TutorialSteps current={4} mdxType=\"TutorialSteps\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/tutorials/toc.json';\nimport MdxLayout from './mdx';\n\ninterface TutorialLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst TutorialLayout: React.FC<TutorialLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(\n        filter: { fileAbsolutePath: { glob: \"**/src/pages/tutorials/**\" } }\n      ) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n              relativeDirectory\n            }\n          }\n          frontmatter {\n            menuTitle\n            order\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"tutorials\"\n      menuTitle\n      pageTitleSuffix=\"Armeria tutorial\"\n    />\n  );\n};\n\nexport default TutorialLayout;\n"],"names":["name","pageTitle","_frontmatter","TutorialSteps","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","current","isMDXComponent","candidateMdxNodes","useStaticQuery","allMdx","nodes","index","docsIndex","prefix","menuTitle","pageTitleSuffix"],"sourceRoot":""}